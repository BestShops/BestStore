package com.bs.beststore.vo;

import java.util.ArrayList;
import java.util.List;

public class AddressExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public AddressExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAidIsNull() {
            addCriterion("AID is null");
            return (Criteria) this;
        }

        public Criteria andAidIsNotNull() {
            addCriterion("AID is not null");
            return (Criteria) this;
        }

        public Criteria andAidEqualTo(Integer value) {
            addCriterion("AID =", value, "aid");
            return (Criteria) this;
        }

        public Criteria andAidNotEqualTo(Integer value) {
            addCriterion("AID <>", value, "aid");
            return (Criteria) this;
        }

        public Criteria andAidGreaterThan(Integer value) {
            addCriterion("AID >", value, "aid");
            return (Criteria) this;
        }

        public Criteria andAidGreaterThanOrEqualTo(Integer value) {
            addCriterion("AID >=", value, "aid");
            return (Criteria) this;
        }

        public Criteria andAidLessThan(Integer value) {
            addCriterion("AID <", value, "aid");
            return (Criteria) this;
        }

        public Criteria andAidLessThanOrEqualTo(Integer value) {
            addCriterion("AID <=", value, "aid");
            return (Criteria) this;
        }

        public Criteria andAidIn(List<Integer> values) {
            addCriterion("AID in", values, "aid");
            return (Criteria) this;
        }

        public Criteria andAidNotIn(List<Integer> values) {
            addCriterion("AID not in", values, "aid");
            return (Criteria) this;
        }

        public Criteria andAidBetween(Integer value1, Integer value2) {
            addCriterion("AID between", value1, value2, "aid");
            return (Criteria) this;
        }

        public Criteria andAidNotBetween(Integer value1, Integer value2) {
            addCriterion("AID not between", value1, value2, "aid");
            return (Criteria) this;
        }

        public Criteria andAphoneIsNull() {
            addCriterion("APHONE is null");
            return (Criteria) this;
        }

        public Criteria andAphoneIsNotNull() {
            addCriterion("APHONE is not null");
            return (Criteria) this;
        }

        public Criteria andAphoneEqualTo(Long value) {
            addCriterion("APHONE =", value, "aphone");
            return (Criteria) this;
        }

        public Criteria andAphoneNotEqualTo(Long value) {
            addCriterion("APHONE <>", value, "aphone");
            return (Criteria) this;
        }

        public Criteria andAphoneGreaterThan(Long value) {
            addCriterion("APHONE >", value, "aphone");
            return (Criteria) this;
        }

        public Criteria andAphoneGreaterThanOrEqualTo(Long value) {
            addCriterion("APHONE >=", value, "aphone");
            return (Criteria) this;
        }

        public Criteria andAphoneLessThan(Long value) {
            addCriterion("APHONE <", value, "aphone");
            return (Criteria) this;
        }

        public Criteria andAphoneLessThanOrEqualTo(Long value) {
            addCriterion("APHONE <=", value, "aphone");
            return (Criteria) this;
        }

        public Criteria andAphoneIn(List<Long> values) {
            addCriterion("APHONE in", values, "aphone");
            return (Criteria) this;
        }

        public Criteria andAphoneNotIn(List<Long> values) {
            addCriterion("APHONE not in", values, "aphone");
            return (Criteria) this;
        }

        public Criteria andAphoneBetween(Long value1, Long value2) {
            addCriterion("APHONE between", value1, value2, "aphone");
            return (Criteria) this;
        }

        public Criteria andAphoneNotBetween(Long value1, Long value2) {
            addCriterion("APHONE not between", value1, value2, "aphone");
            return (Criteria) this;
        }

        public Criteria andAcityIsNull() {
            addCriterion("ACITY is null");
            return (Criteria) this;
        }

        public Criteria andAcityIsNotNull() {
            addCriterion("ACITY is not null");
            return (Criteria) this;
        }

        public Criteria andAcityEqualTo(String value) {
            addCriterion("ACITY =", value, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityNotEqualTo(String value) {
            addCriterion("ACITY <>", value, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityGreaterThan(String value) {
            addCriterion("ACITY >", value, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityGreaterThanOrEqualTo(String value) {
            addCriterion("ACITY >=", value, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityLessThan(String value) {
            addCriterion("ACITY <", value, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityLessThanOrEqualTo(String value) {
            addCriterion("ACITY <=", value, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityLike(String value) {
            addCriterion("ACITY like", value, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityNotLike(String value) {
            addCriterion("ACITY not like", value, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityIn(List<String> values) {
            addCriterion("ACITY in", values, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityNotIn(List<String> values) {
            addCriterion("ACITY not in", values, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityBetween(String value1, String value2) {
            addCriterion("ACITY between", value1, value2, "acity");
            return (Criteria) this;
        }

        public Criteria andAcityNotBetween(String value1, String value2) {
            addCriterion("ACITY not between", value1, value2, "acity");
            return (Criteria) this;
        }

        public Criteria andAlocationIsNull() {
            addCriterion("ALOCATION is null");
            return (Criteria) this;
        }

        public Criteria andAlocationIsNotNull() {
            addCriterion("ALOCATION is not null");
            return (Criteria) this;
        }

        public Criteria andAlocationEqualTo(String value) {
            addCriterion("ALOCATION =", value, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationNotEqualTo(String value) {
            addCriterion("ALOCATION <>", value, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationGreaterThan(String value) {
            addCriterion("ALOCATION >", value, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationGreaterThanOrEqualTo(String value) {
            addCriterion("ALOCATION >=", value, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationLessThan(String value) {
            addCriterion("ALOCATION <", value, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationLessThanOrEqualTo(String value) {
            addCriterion("ALOCATION <=", value, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationLike(String value) {
            addCriterion("ALOCATION like", value, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationNotLike(String value) {
            addCriterion("ALOCATION not like", value, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationIn(List<String> values) {
            addCriterion("ALOCATION in", values, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationNotIn(List<String> values) {
            addCriterion("ALOCATION not in", values, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationBetween(String value1, String value2) {
            addCriterion("ALOCATION between", value1, value2, "alocation");
            return (Criteria) this;
        }

        public Criteria andAlocationNotBetween(String value1, String value2) {
            addCriterion("ALOCATION not between", value1, value2, "alocation");
            return (Criteria) this;
        }

        public Criteria andAconsigneeIsNull() {
            addCriterion("ACONSIGNEE is null");
            return (Criteria) this;
        }

        public Criteria andAconsigneeIsNotNull() {
            addCriterion("ACONSIGNEE is not null");
            return (Criteria) this;
        }

        public Criteria andAconsigneeEqualTo(String value) {
            addCriterion("ACONSIGNEE =", value, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeNotEqualTo(String value) {
            addCriterion("ACONSIGNEE <>", value, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeGreaterThan(String value) {
            addCriterion("ACONSIGNEE >", value, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeGreaterThanOrEqualTo(String value) {
            addCriterion("ACONSIGNEE >=", value, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeLessThan(String value) {
            addCriterion("ACONSIGNEE <", value, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeLessThanOrEqualTo(String value) {
            addCriterion("ACONSIGNEE <=", value, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeLike(String value) {
            addCriterion("ACONSIGNEE like", value, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeNotLike(String value) {
            addCriterion("ACONSIGNEE not like", value, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeIn(List<String> values) {
            addCriterion("ACONSIGNEE in", values, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeNotIn(List<String> values) {
            addCriterion("ACONSIGNEE not in", values, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeBetween(String value1, String value2) {
            addCriterion("ACONSIGNEE between", value1, value2, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAconsigneeNotBetween(String value1, String value2) {
            addCriterion("ACONSIGNEE not between", value1, value2, "aconsignee");
            return (Criteria) this;
        }

        public Criteria andAstatusIsNull() {
            addCriterion("ASTATUS is null");
            return (Criteria) this;
        }

        public Criteria andAstatusIsNotNull() {
            addCriterion("ASTATUS is not null");
            return (Criteria) this;
        }

        public Criteria andAstatusEqualTo(Integer value) {
            addCriterion("ASTATUS =", value, "astatus");
            return (Criteria) this;
        }

        public Criteria andAstatusNotEqualTo(Integer value) {
            addCriterion("ASTATUS <>", value, "astatus");
            return (Criteria) this;
        }

        public Criteria andAstatusGreaterThan(Integer value) {
            addCriterion("ASTATUS >", value, "astatus");
            return (Criteria) this;
        }

        public Criteria andAstatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("ASTATUS >=", value, "astatus");
            return (Criteria) this;
        }

        public Criteria andAstatusLessThan(Integer value) {
            addCriterion("ASTATUS <", value, "astatus");
            return (Criteria) this;
        }

        public Criteria andAstatusLessThanOrEqualTo(Integer value) {
            addCriterion("ASTATUS <=", value, "astatus");
            return (Criteria) this;
        }

        public Criteria andAstatusIn(List<Integer> values) {
            addCriterion("ASTATUS in", values, "astatus");
            return (Criteria) this;
        }

        public Criteria andAstatusNotIn(List<Integer> values) {
            addCriterion("ASTATUS not in", values, "astatus");
            return (Criteria) this;
        }

        public Criteria andAstatusBetween(Integer value1, Integer value2) {
            addCriterion("ASTATUS between", value1, value2, "astatus");
            return (Criteria) this;
        }

        public Criteria andAstatusNotBetween(Integer value1, Integer value2) {
            addCriterion("ASTATUS not between", value1, value2, "astatus");
            return (Criteria) this;
        }

        public Criteria andHidIsNull() {
            addCriterion("HID is null");
            return (Criteria) this;
        }

        public Criteria andHidIsNotNull() {
            addCriterion("HID is not null");
            return (Criteria) this;
        }

        public Criteria andHidEqualTo(Integer value) {
            addCriterion("HID =", value, "hid");
            return (Criteria) this;
        }

        public Criteria andHidNotEqualTo(Integer value) {
            addCriterion("HID <>", value, "hid");
            return (Criteria) this;
        }

        public Criteria andHidGreaterThan(Integer value) {
            addCriterion("HID >", value, "hid");
            return (Criteria) this;
        }

        public Criteria andHidGreaterThanOrEqualTo(Integer value) {
            addCriterion("HID >=", value, "hid");
            return (Criteria) this;
        }

        public Criteria andHidLessThan(Integer value) {
            addCriterion("HID <", value, "hid");
            return (Criteria) this;
        }

        public Criteria andHidLessThanOrEqualTo(Integer value) {
            addCriterion("HID <=", value, "hid");
            return (Criteria) this;
        }

        public Criteria andHidIn(List<Integer> values) {
            addCriterion("HID in", values, "hid");
            return (Criteria) this;
        }

        public Criteria andHidNotIn(List<Integer> values) {
            addCriterion("HID not in", values, "hid");
            return (Criteria) this;
        }

        public Criteria andHidBetween(Integer value1, Integer value2) {
            addCriterion("HID between", value1, value2, "hid");
            return (Criteria) this;
        }

        public Criteria andHidNotBetween(Integer value1, Integer value2) {
            addCriterion("HID not between", value1, value2, "hid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table address
     *
     * @mbg.generated do_not_delete_during_merge Sun Sep 02 10:28:23 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table address
     *
     * @mbg.generated Sun Sep 02 10:28:23 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}