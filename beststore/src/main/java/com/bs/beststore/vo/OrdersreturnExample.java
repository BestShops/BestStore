package com.bs.beststore.vo;

import java.util.ArrayList;
import java.util.List;

public class OrdersreturnExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public OrdersreturnExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOridIsNull() {
            addCriterion("ORID is null");
            return (Criteria) this;
        }

        public Criteria andOridIsNotNull() {
            addCriterion("ORID is not null");
            return (Criteria) this;
        }

        public Criteria andOridEqualTo(Integer value) {
            addCriterion("ORID =", value, "orid");
            return (Criteria) this;
        }

        public Criteria andOridNotEqualTo(Integer value) {
            addCriterion("ORID <>", value, "orid");
            return (Criteria) this;
        }

        public Criteria andOridGreaterThan(Integer value) {
            addCriterion("ORID >", value, "orid");
            return (Criteria) this;
        }

        public Criteria andOridGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORID >=", value, "orid");
            return (Criteria) this;
        }

        public Criteria andOridLessThan(Integer value) {
            addCriterion("ORID <", value, "orid");
            return (Criteria) this;
        }

        public Criteria andOridLessThanOrEqualTo(Integer value) {
            addCriterion("ORID <=", value, "orid");
            return (Criteria) this;
        }

        public Criteria andOridIn(List<Integer> values) {
            addCriterion("ORID in", values, "orid");
            return (Criteria) this;
        }

        public Criteria andOridNotIn(List<Integer> values) {
            addCriterion("ORID not in", values, "orid");
            return (Criteria) this;
        }

        public Criteria andOridBetween(Integer value1, Integer value2) {
            addCriterion("ORID between", value1, value2, "orid");
            return (Criteria) this;
        }

        public Criteria andOridNotBetween(Integer value1, Integer value2) {
            addCriterion("ORID not between", value1, value2, "orid");
            return (Criteria) this;
        }

        public Criteria andOrserviceIsNull() {
            addCriterion("ORSERVICE is null");
            return (Criteria) this;
        }

        public Criteria andOrserviceIsNotNull() {
            addCriterion("ORSERVICE is not null");
            return (Criteria) this;
        }

        public Criteria andOrserviceEqualTo(Integer value) {
            addCriterion("ORSERVICE =", value, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrserviceNotEqualTo(Integer value) {
            addCriterion("ORSERVICE <>", value, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrserviceGreaterThan(Integer value) {
            addCriterion("ORSERVICE >", value, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrserviceGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORSERVICE >=", value, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrserviceLessThan(Integer value) {
            addCriterion("ORSERVICE <", value, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrserviceLessThanOrEqualTo(Integer value) {
            addCriterion("ORSERVICE <=", value, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrserviceIn(List<Integer> values) {
            addCriterion("ORSERVICE in", values, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrserviceNotIn(List<Integer> values) {
            addCriterion("ORSERVICE not in", values, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrserviceBetween(Integer value1, Integer value2) {
            addCriterion("ORSERVICE between", value1, value2, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrserviceNotBetween(Integer value1, Integer value2) {
            addCriterion("ORSERVICE not between", value1, value2, "orservice");
            return (Criteria) this;
        }

        public Criteria andOrstatusIsNull() {
            addCriterion("ORSTATUS is null");
            return (Criteria) this;
        }

        public Criteria andOrstatusIsNotNull() {
            addCriterion("ORSTATUS is not null");
            return (Criteria) this;
        }

        public Criteria andOrstatusEqualTo(Integer value) {
            addCriterion("ORSTATUS =", value, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOrstatusNotEqualTo(Integer value) {
            addCriterion("ORSTATUS <>", value, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOrstatusGreaterThan(Integer value) {
            addCriterion("ORSTATUS >", value, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOrstatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORSTATUS >=", value, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOrstatusLessThan(Integer value) {
            addCriterion("ORSTATUS <", value, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOrstatusLessThanOrEqualTo(Integer value) {
            addCriterion("ORSTATUS <=", value, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOrstatusIn(List<Integer> values) {
            addCriterion("ORSTATUS in", values, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOrstatusNotIn(List<Integer> values) {
            addCriterion("ORSTATUS not in", values, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOrstatusBetween(Integer value1, Integer value2) {
            addCriterion("ORSTATUS between", value1, value2, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOrstatusNotBetween(Integer value1, Integer value2) {
            addCriterion("ORSTATUS not between", value1, value2, "orstatus");
            return (Criteria) this;
        }

        public Criteria andOreasonIsNull() {
            addCriterion("OREASON is null");
            return (Criteria) this;
        }

        public Criteria andOreasonIsNotNull() {
            addCriterion("OREASON is not null");
            return (Criteria) this;
        }

        public Criteria andOreasonEqualTo(Integer value) {
            addCriterion("OREASON =", value, "oreason");
            return (Criteria) this;
        }

        public Criteria andOreasonNotEqualTo(Integer value) {
            addCriterion("OREASON <>", value, "oreason");
            return (Criteria) this;
        }

        public Criteria andOreasonGreaterThan(Integer value) {
            addCriterion("OREASON >", value, "oreason");
            return (Criteria) this;
        }

        public Criteria andOreasonGreaterThanOrEqualTo(Integer value) {
            addCriterion("OREASON >=", value, "oreason");
            return (Criteria) this;
        }

        public Criteria andOreasonLessThan(Integer value) {
            addCriterion("OREASON <", value, "oreason");
            return (Criteria) this;
        }

        public Criteria andOreasonLessThanOrEqualTo(Integer value) {
            addCriterion("OREASON <=", value, "oreason");
            return (Criteria) this;
        }

        public Criteria andOreasonIn(List<Integer> values) {
            addCriterion("OREASON in", values, "oreason");
            return (Criteria) this;
        }

        public Criteria andOreasonNotIn(List<Integer> values) {
            addCriterion("OREASON not in", values, "oreason");
            return (Criteria) this;
        }

        public Criteria andOreasonBetween(Integer value1, Integer value2) {
            addCriterion("OREASON between", value1, value2, "oreason");
            return (Criteria) this;
        }

        public Criteria andOreasonNotBetween(Integer value1, Integer value2) {
            addCriterion("OREASON not between", value1, value2, "oreason");
            return (Criteria) this;
        }

        public Criteria andOrdescIsNull() {
            addCriterion("ORDESC is null");
            return (Criteria) this;
        }

        public Criteria andOrdescIsNotNull() {
            addCriterion("ORDESC is not null");
            return (Criteria) this;
        }

        public Criteria andOrdescEqualTo(String value) {
            addCriterion("ORDESC =", value, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescNotEqualTo(String value) {
            addCriterion("ORDESC <>", value, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescGreaterThan(String value) {
            addCriterion("ORDESC >", value, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescGreaterThanOrEqualTo(String value) {
            addCriterion("ORDESC >=", value, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescLessThan(String value) {
            addCriterion("ORDESC <", value, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescLessThanOrEqualTo(String value) {
            addCriterion("ORDESC <=", value, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescLike(String value) {
            addCriterion("ORDESC like", value, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescNotLike(String value) {
            addCriterion("ORDESC not like", value, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescIn(List<String> values) {
            addCriterion("ORDESC in", values, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescNotIn(List<String> values) {
            addCriterion("ORDESC not in", values, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescBetween(String value1, String value2) {
            addCriterion("ORDESC between", value1, value2, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrdescNotBetween(String value1, String value2) {
            addCriterion("ORDESC not between", value1, value2, "ordesc");
            return (Criteria) this;
        }

        public Criteria andOrphotoIsNull() {
            addCriterion("ORPHOTO is null");
            return (Criteria) this;
        }

        public Criteria andOrphotoIsNotNull() {
            addCriterion("ORPHOTO is not null");
            return (Criteria) this;
        }

        public Criteria andOrphotoEqualTo(String value) {
            addCriterion("ORPHOTO =", value, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoNotEqualTo(String value) {
            addCriterion("ORPHOTO <>", value, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoGreaterThan(String value) {
            addCriterion("ORPHOTO >", value, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoGreaterThanOrEqualTo(String value) {
            addCriterion("ORPHOTO >=", value, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoLessThan(String value) {
            addCriterion("ORPHOTO <", value, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoLessThanOrEqualTo(String value) {
            addCriterion("ORPHOTO <=", value, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoLike(String value) {
            addCriterion("ORPHOTO like", value, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoNotLike(String value) {
            addCriterion("ORPHOTO not like", value, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoIn(List<String> values) {
            addCriterion("ORPHOTO in", values, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoNotIn(List<String> values) {
            addCriterion("ORPHOTO not in", values, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoBetween(String value1, String value2) {
            addCriterion("ORPHOTO between", value1, value2, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrphotoNotBetween(String value1, String value2) {
            addCriterion("ORPHOTO not between", value1, value2, "orphoto");
            return (Criteria) this;
        }

        public Criteria andOrtypeIsNull() {
            addCriterion("ORTYPE is null");
            return (Criteria) this;
        }

        public Criteria andOrtypeIsNotNull() {
            addCriterion("ORTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andOrtypeEqualTo(Integer value) {
            addCriterion("ORTYPE =", value, "ortype");
            return (Criteria) this;
        }

        public Criteria andOrtypeNotEqualTo(Integer value) {
            addCriterion("ORTYPE <>", value, "ortype");
            return (Criteria) this;
        }

        public Criteria andOrtypeGreaterThan(Integer value) {
            addCriterion("ORTYPE >", value, "ortype");
            return (Criteria) this;
        }

        public Criteria andOrtypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("ORTYPE >=", value, "ortype");
            return (Criteria) this;
        }

        public Criteria andOrtypeLessThan(Integer value) {
            addCriterion("ORTYPE <", value, "ortype");
            return (Criteria) this;
        }

        public Criteria andOrtypeLessThanOrEqualTo(Integer value) {
            addCriterion("ORTYPE <=", value, "ortype");
            return (Criteria) this;
        }

        public Criteria andOrtypeIn(List<Integer> values) {
            addCriterion("ORTYPE in", values, "ortype");
            return (Criteria) this;
        }

        public Criteria andOrtypeNotIn(List<Integer> values) {
            addCriterion("ORTYPE not in", values, "ortype");
            return (Criteria) this;
        }

        public Criteria andOrtypeBetween(Integer value1, Integer value2) {
            addCriterion("ORTYPE between", value1, value2, "ortype");
            return (Criteria) this;
        }

        public Criteria andOrtypeNotBetween(Integer value1, Integer value2) {
            addCriterion("ORTYPE not between", value1, value2, "ortype");
            return (Criteria) this;
        }

        public Criteria andOidIsNull() {
            addCriterion("OID is null");
            return (Criteria) this;
        }

        public Criteria andOidIsNotNull() {
            addCriterion("OID is not null");
            return (Criteria) this;
        }

        public Criteria andOidEqualTo(Integer value) {
            addCriterion("OID =", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidNotEqualTo(Integer value) {
            addCriterion("OID <>", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidGreaterThan(Integer value) {
            addCriterion("OID >", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidGreaterThanOrEqualTo(Integer value) {
            addCriterion("OID >=", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidLessThan(Integer value) {
            addCriterion("OID <", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidLessThanOrEqualTo(Integer value) {
            addCriterion("OID <=", value, "oid");
            return (Criteria) this;
        }

        public Criteria andOidIn(List<Integer> values) {
            addCriterion("OID in", values, "oid");
            return (Criteria) this;
        }

        public Criteria andOidNotIn(List<Integer> values) {
            addCriterion("OID not in", values, "oid");
            return (Criteria) this;
        }

        public Criteria andOidBetween(Integer value1, Integer value2) {
            addCriterion("OID between", value1, value2, "oid");
            return (Criteria) this;
        }

        public Criteria andOidNotBetween(Integer value1, Integer value2) {
            addCriterion("OID not between", value1, value2, "oid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ordersreturn
     *
     * @mbg.generated do_not_delete_during_merge Wed Aug 29 09:57:28 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ordersreturn
     *
     * @mbg.generated Wed Aug 29 09:57:28 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}